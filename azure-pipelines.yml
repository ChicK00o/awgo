# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  batch: true
  paths:
    exclude:
      - README.md
      - LICENCE
      - TODO
      - icon.*
      - env
      - bench.py
      - modd.conf
      - .gitignore
      - .travis.yml
      - bin/*

pool:
  vmImage: 'macOS-10.13'

variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/opt/go/libexec' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  BUILD_NUMBER: '$(Build.BuildNumber)'
  CI_PULL_REQUEST: '$(Build.SourceBranch)'
  CI_PKG_NAME: 'github.com/$(Build.Repository.Name)'
  CI_PR_COMMIT: '$(System.PullRequest.SourceCommitId)'
  CI_BASE_COMMIT: '$(Build.SourceVersion)'
  CODECOV_TOKEN: '$(CodeCovToken)'
  CODACY_TOKEN: '$(CodacyToken)'
  # COVERALLS_TOKEN: '$(CoverallsToken)'
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

steps:
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(modulePath)'
    shopt -s extglob
    shopt -s dotglob
    mv !(gopath) '$(modulePath)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
    go version
  displayName: 'Set up Go'

# Dump environment for debugging
 - script: |
     env | grep SYSTEM_ | sort
     env | grep BUILD_ | sort
     env | grep CI_ | sort
     echo 'System.PullRequest.SourceCommitId=$(System.PullRequest.SourceCommitId)'
     echo 'Build.SourceVersion=$(Build.SourceVersion)'
   workingDirectory: '$(modulePath)'
   displayName: Environment

- script: |
      go get -v -t -d ./...
  workingDirectory: '$(modulePath)'
  displayName: Fetch Code

- script: |
    curl -fsSL https://github.com/golangci/golangci-lint/releases/download/v1.20.1/golangci-lint-1.20.1-darwin-amd64.tar.gz | tar -C '$(GOBIN)' -xz --strip-components=1 --include='*golangci-lint'
    golangci-lint run -c .golangci.toml
  workingDirectory: '$(modulePath)'
  displayName: Lint

- script: |
    ./run-tests.sh -ic ./...
  workingDirectory: '$(modulePath)'
  displayName: Run Tests

# Coveralls doesn't work with Azure
# - displayName: Coveralls
#   script: |
#     go get github.com/mattn/goveralls
#     goveralls -coverprofile=coverage.out -service=local; true
#   workingDirectory: '$(modulePath)'
#   displayName: 'coveralls.io'
- script: |
    go get github.com/schrej/godacov
    if [[ '$(System.PullRequest.SourceCommitId)' != "" ]]; then
      COMMIT=$CI_PR_COMMIT
      echo "submitting PR commit $COMMIT ..."
    else
      COMMIT=$CI_BASE_COMMIT
      echo "submitting master commit $COMMIT ..."
    fi
    godacov -r coverage.out -t "$CODACY_TOKEN" -c "$COMMIT"; true
    bash <(curl -s https://codecov.io/bash); true
  workingDirectory: '$(modulePath)'
  displayName: Coverage
